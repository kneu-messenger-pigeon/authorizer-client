// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// ClientInterface is an autogenerated mock type for the ClientInterface type
type ClientInterface struct {
	mock.Mock
}

// GetAuthUrl provides a mock function with given fields: userId, redirectUri
func (_m *ClientInterface) GetAuthUrl(userId string, redirectUri string) (string, time.Time, error) {
	ret := _m.Called(userId, redirectUri)

	var r0 string
	var r1 time.Time
	var r2 error
	if rf, ok := ret.Get(0).(func(string, string) (string, time.Time, error)); ok {
		return rf(userId, redirectUri)
	}
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(userId, redirectUri)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string) time.Time); ok {
		r1 = rf(userId, redirectUri)
	} else {
		r1 = ret.Get(1).(time.Time)
	}

	if rf, ok := ret.Get(2).(func(string, string) error); ok {
		r2 = rf(userId, redirectUri)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewClientInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewClientInterface creates a new instance of ClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClientInterface(t mockConstructorTestingTNewClientInterface) *ClientInterface {
	mock := &ClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
