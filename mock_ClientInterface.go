// Code generated by mockery v2.20.2. DO NOT EDIT.

package authorizer

import mock "github.com/stretchr/testify/mock"

// MockClientInterface is an autogenerated mock type for the ClientInterface type
type MockClientInterface struct {
	mock.Mock
}

// GetAuthUrl provides a mock function with given fields: userId
func (_m *MockClientInterface) GetAuthUrl(userId string) (string, error) {
	ret := _m.Called(userId)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(userId)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockClientInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockClientInterface creates a new instance of MockClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockClientInterface(t mockConstructorTestingTNewMockClientInterface) *MockClientInterface {
	mock := &MockClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
